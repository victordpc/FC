   1              	# 1 "../Practica2b_2.asm"
   1              	/*51458991-X*/
   0              	
   0              	
   0              	
   2              	.global start
   3              	
   4              	.equ N, 8
   5              	
   6              	.data
   7 0000 07000000 	A: .word 7, 3, 25, 4, 75, 2, 1, 1
   7      03000000 
   7      19000000 
   7      04000000 
   7      4B000000 
   8              	
   9              	.bss
  10 0000 00000000 	B:	 .space N*4
  10      00000000 
  10      00000000 
  10      00000000 
  10      00000000 
  11              	
  12              	.text
  13              	start:
  14              	
  15 0000 78409FE5 			LDR R4, =A
  16 0004 78309FE5 			LDR R3, =B
  17              	
  18 0008 0020A0E3 			MOV R2, #0
  19              	forCopia:
  20 000c 080052E3 			CMP R2, #N
  21 0010 0300000A 			BEQ finCopia
  22              	
  23 0014 025194E7 			LDR R5, [R4, R2, LSL #2]	/*	Cargamos en R5 A[i] 	*/
  24 0018 025183E7 			STR R5, [R3, R2, LSL #2]	/*	Guardamos R6 en B[i]	*/
  25              	
  26 001c 012082E2 			ADD R2, #1
  27 0020 F9FFFFEA 			B forCopia
  28              	
  29              	finCopia:
  30              	
  31 0024 0020A0E3 			MOV R2,#0			/*	Limpiamos los registros usados	*/
  32 0028 0030A0E3 			MOV R3,#0
  33 002c 0040A0E3 			MOV R4,#0
  34 0030 0050A0E3 			MOV R5,#0
  35              	
  36 0034 44409FE5 			LDR R4, =A			/*	R4 A	*/
  37              		/*	R0 -> Aux	*/
  38 0038 0030A0E3 			MOV R3, #0			/*	R3 j=0	*/
  39 003c 080053E3 	forJ:	CMP R3, #N			/*	Comparamos para salir de forJ	*/
  40 0040 0D00000A 			BEQ	finJ
  41              	
  42 0044 0020A0E3 			MOV R2, #0			/*	R2 i=0	*/
  43 0048 080052E3 	forI:	CMP	R2, #N			/*	Comparamos para salir de forI	*/
  44 004c 0800000A 			BEQ finI
  45              	
  46 0050 026194E7 			LDR R6, [R4, R2, LSL #2]	/*	Cargamos en R6 A[i]	*/
  47 0054 039194E7 			LDR R9, [R4, R3, LSL #2]	/*	Cargamos en R9 A[j]	*/
  48              	
  49 0058 060059E1 			CMP R9, R6			/*	Comparamos A[j] con A[i]	*/
  50 005c 020000AA 			BGE NoIf			/*	Si A[j] >= A[i]	saltamos a NoIf 	*/
  51              	
  52 0060 0900A0E1 			MOV R0, R9			/*	aux = A[j]	*/
  53              	
  54 0064 036184E7 			STR R6, [R4, R3, LSL #2] 	/*	A[j] = A[i] 	*/
  55 0068 020184E7 			STR R0, [R4, R2, LSL #2]	/*	A[i] = Aux		*/
  56              	NoIf:
  57 006c 012082E2 			ADD R2, #1
  58 0070 F4FFFFEA 			B forI
  59              	finI:
  60 0074 013083E2 			ADD R3, #1
  61 0078 EFFFFFEA 			B forJ
  62              	finJ:
  63 007c FEFFFFEA 	fin:	B .
  64 0080 00000000 			.end
  64      00000000 
DEFINED SYMBOLS
 ../Practica2b_2.asm:13     .text:00000000 start
 ../Practica2b_2.asm:4      *ABS*:00000008 N
 ../Practica2b_2.asm:7      .data:00000000 A
 ../Practica2b_2.asm:10     .bss:00000000 B
 ../Practica2b_2.asm:10     .bss:00000000 $d
 ../Practica2b_2.asm:15     .text:00000000 $a
 ../Practica2b_2.asm:19     .text:0000000c forCopia
 ../Practica2b_2.asm:29     .text:00000024 finCopia
 ../Practica2b_2.asm:39     .text:0000003c forJ
 ../Practica2b_2.asm:62     .text:0000007c finJ
 ../Practica2b_2.asm:43     .text:00000048 forI
 ../Practica2b_2.asm:59     .text:00000074 finI
 ../Practica2b_2.asm:56     .text:0000006c NoIf
 ../Practica2b_2.asm:63     .text:0000007c fin
 ../Practica2b_2.asm:64     .text:00000080 $d
                   .debug_aranges:0000000c $d

NO UNDEFINED SYMBOLS
